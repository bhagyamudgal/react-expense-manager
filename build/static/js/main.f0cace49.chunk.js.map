{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","substring","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","localStorage","getItem","setItem","JSON","stringify","Expenses_Storage","parse","setExpenses","prevExpenses","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0cace49.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // console.log(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: (Math.random() + 1).toString(36).substring(7),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    // console.log(expense);\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState} from \"react\";\r\n\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\n\r\n// const DUMMY_EXPENSES = [\r\n//   {\r\n//     id: \"e1\",\r\n//     title: \"Toilet Paper\",\r\n//     amount: 94.12,\r\n//     date: new Date(2020, 7, 14),\r\n//   },\r\n//   {\r\n//     id: \"e2\",\r\n//     title: \"New TV OLED\",\r\n//     amount: 799.49,\r\n//     date: new Date(2021, 7, 2),\r\n//   },\r\n//   {\r\n//     id: \"e3\",\r\n//     title: \"Car Insurance\",\r\n//     amount: 294.67,\r\n//     date: new Date(2021, 2, 28),\r\n//   },\r\n//   {\r\n//     id: \"e4\",\r\n//     title: \"New Desk (Wooden)\",\r\n//     amount: 450,\r\n//     date: new Date(2021, 5, 12),\r\n//   },\r\n// ];\r\n\r\nconst DUMMY_EXPENSES = [];\r\n\r\nconst App = () => {\r\n  if (localStorage.getItem(\"expenses\") === null) {\r\n    localStorage.setItem(\"expenses\", JSON.stringify(DUMMY_EXPENSES));\r\n  }\r\n  const Expenses_Storage = JSON.parse(localStorage.getItem(\"expenses\"));\r\n  Expenses_Storage.map((expense) => {\r\n    return (expense.date = new Date(expense.date));\r\n  });\r\n\r\n  const [expenses, setExpenses] = useState(Expenses_Storage);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n    Expenses_Storage.push(expense);\r\n    // DUMMY_EXPENSES.push(expense);\r\n    localStorage.setItem(\"expenses\", JSON.stringify(Expenses_Storage));\r\n  };\r\n\r\n  // return React.createElement(\r\n  //   'div',\r\n  //   {},\r\n  //   React.createElement('h2', {}, \"Let's get started!\"),\r\n  //   React.createElement(Expenses, { items: expenses })\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}